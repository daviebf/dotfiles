[user]
	signingkey = AD43BDC9CCA7E0CF
	name = Davi Busanello
	email = itsme@davibusanello.net
[diff]
	tool = meld
	noprefix = true
[diffltool]
	prompt = true
[difftool "meld"]
	trustExitCode = true
[merge]
	tool = meld
[mergetool]
	prompt = true
[mergetool "meld"]
	trustExitCode = true
[core]
	pager = less -F -X
	excludesfile = "~/.gitignore_global"
[cola]
	spellcheck = false
	expandtab = true
[gui]
	editor = vim
[alias]
	tree = "!git log --graph --decorate --pretty=format:'%C(yellow)%h %Cred%cr %Cblue(%an)%C(cyan)%d%Creset %s' --abbrev-commit --all"
    log-my-week = !git log --author $(git config user.email) --since "1 week ago"
    # Revert last commit
    uncommit = reset --soft HEAD~1
    # Add changes to Stash and apply it back
    snapshot = !git stash push "snapshot: $(date)" && git stash apply "stash@{0}"
    # Sync the fork repository with the upstream
    syncfork = "!sh $DOTFILES_PATH/git/git_sync_forked_repository.sh"

    safereset = "!f() { \
        trap 'echo ERROR: Operation failed; return' ERR; \
        echo Making sure there are no changes...; \
        last_status=$(git status --porcelain);\
        if [[ $last_status != \"\" ]]; then\
            echo There are dirty files:;\
            echo \"$last_status\";\
            echo;\
            echo -n \"Enter Y if you would like to DISCARD these changes or W to commit them as WIP: \";\
            read dirty_operation;\
            if [ \"$dirty_operation\" == \"Y\" ]; then \
                echo Resetting...;\
                git reset --hard;\
            elif [ \"$dirty_operation\" == \"W\" ]; then\
                echo Comitting WIP...;\
                git commit -a --message='WIP' > /dev/null && echo WIP Comitted;\
            else\
                echo Operation cancelled;\
                exit 1;\
            fi;\
        fi;\
    }; \
    f"

[merge]
	tool = meld
[commit]
	gpgsign = true
; git config --show-origin --get user.email to test
[includeIf "gitdir/i:~/ToptalProjects/"]
	path = "~/ToptalProjects/.gitconfig"
[pull]
	ff = only
[init]
	defaultBranch = main
